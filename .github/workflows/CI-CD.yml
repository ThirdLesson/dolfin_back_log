name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build With Gradle
        run: ./gradlew build -x test

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/dolfin-log .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/dolfin-log

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PEM_KEY }}
          proxy_host: ${{ secrets.SSH_TUN_HOST }}  #  퍼블릭 IP를 가진 중간 서버
          proxy_username: ${{ secrets.SSH_USER }}  # 터널링 서버의 사용자
          proxy_key: ${{ secrets.SSH_PEM_KEY }}
          port: 22
          script: |
            set -e

            echo "📁 [1] tave-website 디렉토리로 이동"
            cd ~/dolfin-log

            echo "🐳 [2] 도커 이미지 pull"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dolfin-log

            echo "🔄 [3] 도커 컴포즈 재시작"
            docker compose down
            docker compose up -d

            echo "✅ 배포 완료"